# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :inetRouter => {
    :box_name => "centos/7",
    :net => [
              # interfaces for bonding
              {adapter: 2, auto_config: false, virtualbox__intnet: "router-net"},
		          {adapter: 3, auto_config: false, virtualbox__intnet: "router-net"},
            ]
  },
  :centralRouter => {
    :box_name => "centos/7",
    :net => [
		          {ip: '192.168.0.1', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"},
              {ip: '192.168.0.33', adapter: 3, netmask: "255.255.255.240", virtualbox__intnet: "hw-net"},
              {ip: '192.168.0.65', adapter: 4, netmask: "255.255.255.192", virtualbox__intnet: "mgt-net"},
		          {ip: '192.168.255.5', adapter: 5, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
		          {ip: '192.168.255.9', adapter: 6, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
		          # interfaces for team0
              {adapter: 7, auto_config: false, virtualbox__intnet: "router-net"},
		          {adapter: 8, auto_config: false, virtualbox__intnet: "router-net"},
            ]
  },
  :centralServer => {
    :box_name => "centos/7",
    :net => [
              {ip: '192.168.0.2', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"},
            ]
  },
  :office1Router => {
    :box_name => "centos/7",
    :net => [
              {ip: '192.168.2.1', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "office1-net"},
              {ip: '192.168.255.6', adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
              {ip: '192.168.2.65', adapter: 4, netmask: "255.255.255.240", virtualbox__intnet: "mgt-net"},
              {ip: '192.168.2.129', adapter: 5, netmask: "255.255.255.240", virtualbox__intnet: "hw-net"},
              {ip: '192.168.2.193', adapter: 6, netmask: "255.255.255.240", virtualbox__intnet: "dev-net"},
            ]
  },
  :office1Server => {
    :box_name => "centos/7",
    :net => [
               {ip: '192.168.2.66', adapter: 2, netmask: "255.255.255.192", virtualbox__intnet: "office1-net"}
            ]
  },
  :office2Router => {
    :box_name => "centos/7",
    :net => [
              {ip: '192.168.1.1', adapter: 2, netmask: "255.255.255.128", virtualbox__intnet: "office2-net"},
              {ip: '192.168.255.10', adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
              {ip: '192.168.1.129', adapter: 4, netmask: "255.255.255.128", virtualbox__intnet: "hw-net"},
              {ip: '192.168.1.193', adapter: 5, netmask: "255.255.255.128", virtualbox__intnet: "dev-net"},
            ]
  },
  :office2Server => {
    :box_name => "centos/7",
    :net => [
              {ip: '192.168.1.2', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "office2-net"}
            ]
  },
  # vlan servers and clients
  :testClient1 => {
    :box_name => "centos/7",
    :net => [
              {adapter: 2, auto_config: false, virtualbox__intnet: "test-LAN"},
              {ip: '192.168.1.3', adapter: 3, netmask: "255.255.255.0", virtualbox__intnet: "office2-net"}
            ]
  },
  :testClient2 => {
    :box_name => "centos/7",
    :net => [
              {adapter: 2, auto_config: false, virtualbox__intnet: "test-LAN"},
              {ip: '192.168.1.4', adapter: 3, netmask: "255.255.255.0", virtualbox__intnet: "office2-net"}
            ]
  },
  :testServer1 => {
    :box_name => "centos/7",
    :net => [
              {adapter: 2, auto_config: false, virtualbox__intnet: "test-LAN"},
              {ip: '192.168.1.5', adapter: 3, netmask: "255.255.255.0", virtualbox__intnet: "office2-net"}
            ]
  },
  :testServer2 => {
    :box_name => "centos/7",
    :net => [
              {adapter: 2, auto_config: false, virtualbox__intnet: "test-LAN"},
              {ip: '192.168.1.6', adapter: 3, netmask: "255.255.255.0", virtualbox__intnet: "office2-net"}
            ]
  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|
    config.vm.define boxname do |box|

      box.vm.box = boxconfig[:box_name]
      box.vm.host_name = boxname.to_s

      config.vm.box_check_update = false

      boxconfig[:net].each do |ipconf|
        box.vm.network "private_network", ipconf
      end

      if boxconfig.key?(:public)
        box.vm.network "public_network", boxconfig[:public]
      end

      box.vm.provision "shell", inline: <<-SHELL
        mkdir -p ~root/.ssh
        cp ~vagrant/.ssh/auth* ~root/.ssh
      SHELL

      box.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--memory", "256"]
      end

      case boxname.to_s
        when "inetRouter"
            box.vm.provision "shell", run: "always", inline: <<-SHELL
              echo -e 'DEVICE=bond0\nONBOOT=yes\nTYPE=Bond\nBONDING_MASTER=yes\nIPADDR=192.168.255.1\nPREFIX=30\nBOOTPROTO=static\nBONDING_OPTS="mode=1 miimon=100 fail_over_mac=1"' > /etc/sysconfig/network-scripts/ifcfg-bond0
              echo -e "BOOTPROTO=none\nONBOOT=yes\nDEVICE=eth1\nMASTER=bond0\nSLAVE=yes" > /etc/sysconfig/network-scripts/ifcfg-eth1
              echo -e "BOOTPROTO=none\nONBOOT=yes\nDEVICE=eth2\nMASTER=bond0\nSLAVE=yes" > /etc/sysconfig/network-scripts/ifcfg-eth2
              echo "net.ipv4.conf.all.forwarding=1" > /etc/sysctl.d/99-sysctl.conf && sysctl -p
              systemctl restart network
              systemctl start firewalld && firewall-cmd --add-masquerade --permanent && firewall-cmd --reload
            SHELL
        when "centralRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            echo "192.168.1.0/24 via 192.168.255.10" > /etc/sysconfig/network-scripts/route-eth5
            echo "192.168.2.0/24 via 192.168.255.6" > /etc/sysconfig/network-scripts/route-eth4
            echo "net.ipv4.conf.all.forwarding=1" > /etc/sysctl.d/99-sysctl.conf && sysctl -p
            systemctl restart network
            nmcli device modify eth0 ipv4.never-default yes
            nmcli con add type team con-name team0 ifname team0 config '{"runner": {"name": "loadbalance", "active": true}}'
            nmcli con mod team0 ipv4.addresses 192.168.255.2/30
            nmcli con mod team0 ipv4.gateway 192.168.255.1
            nmcli con mod team0 ipv4.method manual
            nmcli con add type team-slave con-name team0-slave0 ifname eth6 master team0
            nmcli con add type team-slave con-name team0-slave1 ifname eth7 master team0
            nmcli con up team0-slave0
            nmcli con up team0-slave1
            nmcli con up team0
            systemctl start firewalld && systemctl enable firewalld && firewall-cmd --add-masquerade --permanent && firewall-cmd --reload
          SHELL
        when "centralServer"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            nmcli device modify eth0 ipv4.never-default yes
            nmcli device modify eth1 ipv4.gateway 192.168.0.1
          SHELL
	      when "office1Router"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            systemctl start firewalld && systemctl enable firewalld && firewall-cmd --add-masquerade --permanent && firewall-cmd --reload
            echo net.ipv4.conf.all.forwarding=1 >> /etc/sysctl.d/99-sysctl.conf && sysctl -p
            nmcli device modify eth0 ipv4.never-default yes
            nmcli device modify eth2 ipv4.gateway 192.168.255.5
          SHELL
	      when "office1Server"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            nmcli device modify eth0 ipv4.never-default yes
            nmcli device modify eth1 ipv4.gateway 192.168.2.65
          SHELL
        when "office2Router"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            systemctl start firewalld && systemctl enable firewalld && firewall-cmd --add-masquerade --permanent && firewall-cmd --reload
            echo net.ipv4.conf.all.forwarding=1 >> /etc/sysctl.d/99-sysctl.conf && sysctl -p
            nmcli device modify eth0 ipv4.never-default yes
            nmcli device modify eth2 ipv4.gateway 192.168.255.9
          SHELL
	      when "office2Server"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            nmcli device modify eth0 ipv4.never-default yes
            nmcli device modify eth1 ipv4.gateway 192.168.1.1
          SHELL
        ### vlan servers and clients
	      when "testClient1"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            nmcli device modify eth0 ipv4.never-default yes
            nmcli con add type vlan con-name eth1.1 dev eth1 id 1 ip4 10.10.10.254/24
            nmcli device modify eth2 ipv4.gateway 192.168.1.1
          SHELL
	      when "testServer1"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            nmcli device modify eth0 ipv4.never-default yes
            nmcli con add type vlan con-name eth1.1 dev eth1 id 1 ip4 10.10.10.1/24
            nmcli device modify eth2 ipv4.gateway 192.168.1.1
          SHELL
	      when "testClient2"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            nmcli device modify eth0 ipv4.never-default yes
            nmcli con add type vlan con-name eth1.2 dev eth1 id 2 ip4 10.10.10.254/24
            nmcli device modify eth2 ipv4.gateway 192.168.1.1
          SHELL
	      when "testServer2"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            nmcli device modify eth0 ipv4.never-default yes
            nmcli con add type vlan con-name eth1.2 dev eth1 id 2 ip4 10.10.10.1/24
            nmcli device modify eth2 ipv4.gateway 192.168.1.1
          SHELL
      end
    end
  end
end
